/* eslint-disable import/prefer-default-export */
export const quiz = {
  questions: [
    {
      question: 'A valid react component can return _____ number of elements.',
      answerSelectionType: 'single',
      answers: [
        '1',
        '2',
        '3',
        'None of the above',
      ],
      correctAnswer: '1',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'For controlled components in react...',
      answerSelectionType: 'single',
      answers: [
        'Source of truth is the DOM',
        'Source of truth is component state',
        'Source of truth can be anything',
        'None of above',
      ],
      correctAnswer: '2',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'For uncontrolled components in react...',
      questionType: 'text',
      answerSelectionType: 'single',
      answers: [
        'Source of truth is component state',
        'Source of truth is the DOM',
        'Source of truth can be anything',
        'None of above',
      ],
      correctAnswer: '2',
      point: '10',
    },
    {
      question: 'What is the second argument for setState useful for?',
      answerSelectionType: 'single',
      answers: [
        'To invoke code after the setState operation is done',
        'To replace the state completely instead of the default merge action',
        'To access the previous state before the setState operation',
      ],
      correctAnswer: '1',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'ReactJS uses _____ to increase performance',
      answerSelectionType: 'single',
      answers: [
        'Original DOM',
        'Virtual DOM',
        'Both of the above',
        'None of the above',
      ],
      correctAnswer: '2',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'What are two ways data gets handled in react?',
      answerSelectionType: 'single',
      answers: [
        'State & component',
        'State & services',
        'Services & components',
        'State & props',
      ],
      correctAnswer: '4',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'In react, what is used to pass data to component from outside?',
      answerSelectionType: 'single',
      answers: [
        'Set state',
        'Render with argument',
        'Props',
        'propTypes',
      ],
      correctAnswer: '3',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'Ref in react component is used to assign reference to DOM elements. Ref can be created by',
      answerSelectionType: 'single',
      answers: [
        'Calling React.createRef method',
        'Assigning a value to ref attribute in JSX',
        'Both of above',
        'None of above',
      ],
      correctAnswer: '3',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'State in react can be updated by call to setState method. These calls are',
      answerSelectionType: 'single',
      answers: [
        'Synchronous in nature',
        'Asynchronous in nature',
        'Are asynchronous but can be made synchronous when required',
        'None of the above',
      ],
      correctAnswer: '2',
      point: '10',
      questionType: 'text',
    },
    {
      question: 'Keys are given to a list of elements in react. These keys should be',
      answerSelectionType: 'single',
      answers: [
        'Unique in the DOM',
        'Unique among sibling elements only',
        'Are not required to be unique',
      ],
      correctAnswer: '2',
      point: '10',
      questionType: 'text',
    },

  ],
  quizTitle: 'What\'s your React iQ?',
  // quizSynopsis: 'Tap below to get started',
  appLocale: {
    landingHeaderText: 'Find out in <questionLength> quick questions',
    question: '',
    startQuizBtn: 'Begin',
    resultFilterAll: 'All',
    resultFilterCorrect: 'Correct',
    resultFilterIncorrect: 'Incorrect',
    nextQuestionBtn: 'Next',
    resultPageHeaderText: 'You have completed the quiz. You got <correctIndexLength> out of <questionLength> questions.',
    resultPagePoint: 'You scored <correctPoints>%',
  },
};
